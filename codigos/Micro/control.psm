call inicializacion
ciclo_principal:
call RTC
call teclado
load s0,51
call write_start
call VGA
jump ciclo_principal

inicializacion:
;escritura de bit de inicializazion en 1
load s2,00010000'b
output s2,03
call write_start
;escritura de bit de inicializacion en 0
load s2,00000000'b
output s2,03
call write_start
;escritura de mascara on
load s2,00000100'b
output s2,02
call write_start
;scritura de enable
load s2,00001000'b
output s2,01
call write_start
;ciclo de escritura en cero
load s0,16'd
load s1,00
ciclo_cero:
add s0,01
output s1,(s0)
test s0,25
jump nz, ciclo_cero
return
;fin de llamada de inicicalizacion

teclado:
load s0,04
ciclo_teclado:
add s0,01
input s1,(s0)
store s1,(s0)
test s0,07
jump nz, ciclo_teclado
fetch s1,07 
test s1, 01
call z, escritura
fetch s0,05
fetch s1,06
store s1,(s0)
store s0,0A
return

escritura:
output s1,(s0)
return

RTC:
input s3,04
call write_start
input s3,04
load s0,16'd
ciclo_RTC:
add s0,01
input s2,(s0)
call write_start
input s2,(s0)
store s2,(s0)
test s0,25'd
jump nz,ciclo_RTC
fetch s0,10'd
store s0,26'd  
input s2,0B
call write_start
input s2,0B
store s2,27'd
return

VGA:
load s0,39'd
load s1,16'd
ciclo_VGA:
add s0,01
add s1,01
fetch s2,(s1)
output s2,(s0)
test s0,50'd
jump nz,ciclo_VGA
fetch s3,26'd  ;puntero
output s3,49'd
fetch s3,10'd  ;irq
output s3,50'd
output s3,14'd
fetch s3,28'd  ;timer activo
output s3,51'd
return


write_start:
input s1,(s0)
test s1,01
jump z, write_start
return